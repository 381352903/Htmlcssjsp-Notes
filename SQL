FdNLveyGt6/C
//win
net start mysql

mysql -u root -p
111111

//create DATABASE RUNOOB;

use RUNOOB;

CREATE TABLE IF NOT EXISTS `table1`(`id` INT UNSIGNED AUTO_INCREMENT,`name` VARCHAR(40) NOT NULL,PRIMARY KEY(`id`))ENGINE=InnoDB DEFAULT CHARSET=utf8;

INSERT INTO table1 VALUES(1,'a');ALTER TABLE table1 ADD `score` INT DEFAULT 0;

ALTER TABLE table1 ADD `score` INT DEFAULT 0;//增加新字段（列）

UPDATE table1 SET name='Alice' WHERE id=1;

select * from table1 order by score desc;
select * from table1 where id=2 and name='Tom';

delete from table1 where id=1;
1.添加字段  

           ALTER TABLE 表明 add 字段名称 类型(int,char,VARCHAR...) DEFAULT 默认值  位置（FIRST, AFTER+字段名称）;

2.删除

          ALTER TABLE 表名  DROP字段名称

3.更改字段

  

  （1） 更改字段长度 

            alter table 表名  modify  column 名称 类型;

            例如：alter table ivr_strategy modify  column product_name VARCHAR(20);

  （2）更改字段类型

             alter table <表名> alter column <字段名> 新类型名(长度)

  （3）修改字段名名称

            ALTER TABLE TABLENAME Change COL1 COL2 类型 。。。;

select count(*) from table1;




181
SELECT E1.Name as Employee
FROM Employee as E1, Employee as E2
WHERE E1.ManagerId=E2.Id AND E1.Salary>E2.Salary

select IFNULL( (select distinct e1.salary from Employee e1
where (select count(distinct e2.salary ) from Employee e2 where e2.salary > e1.salary) = 1) , null)
//can not use
Here is my solution,you can change =1 to =2,=3 if you want to get the third highest or fourth

596.
select class from courses group by class having count(distinct student) >= 5;
SELECT class FROM courses GROUP BY class HAVING COUNT(DISTINCT student) >= 5;

196.
DELETE p1
FROM Person p1, Person p2
WHERE p1.Email = p2.Email AND
p1.Id > p2.Id
把同样的中Id大的删除，只留一个Id最小的

175.
SELECT Person.FirstName, Person.LastName, Address.City, Address.State from Person LEFT JOIN Address on Person.PersonId = Address.PersonId;

627.
改table里的值
UPDATE salary
    SET sex  = (CASE WHEN sex = 'm' 
        THEN  'f' 
        ELSE 'm' 
        END)

1179.
select id, 
	sum(case when month = 'jan' then revenue else null end) as Jan_Revenue,
	sum(case when month = 'feb' then revenue else null end) as Feb_Revenue,
	sum(case when month = 'mar' then revenue else null end) as Mar_Revenue,
	sum(case when month = 'apr' then revenue else null end) as Apr_Revenue,
	sum(case when month = 'may' then revenue else null end) as May_Revenue,
	sum(case when month = 'jun' then revenue else null end) as Jun_Revenue,
	sum(case when month = 'jul' then revenue else null end) as Jul_Revenue,
	sum(case when month = 'aug' then revenue else null end) as Aug_Revenue,
	sum(case when month = 'sep' then revenue else null end) as Sep_Revenue,
	sum(case when month = 'oct' then revenue else null end) as Oct_Revenue,
	sum(case when month = 'nov' then revenue else null end) as Nov_Revenue,
	sum(case when month = 'dec' then revenue else null end) as Dec_Revenue
from department
group by id
order by id
